name: KMP CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  setup:
    name: Setup & Cache Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

  lint:
    name: Run Lint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Grant execute permission to Gradle
        run: chmod +x ./gradlew

      - name: Run Ktlint
        run: ./gradlew ktlintCheck

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Grant execute permission to Gradle
        run: chmod +x ./gradlew

      - name: Run Unit Tests
        run: ./gradlew allTests

  build:
    name: Build KMP Targets
    runs-on: ubuntu-latest
    needs: [setup, lint, test]
    steps:
      - uses: actions/checkout@v4

      - name: Grant execute permission to Gradle
        run: chmod +x ./gradlew

      - name: Build Android App
        run: ./gradlew :androidApp:assembleDebug

      - name: Build KMP Library
        run: ./gradlew build

  sonarqube:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission to Gradle
        run: chmod +x ./gradlew

      - name: Run SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonarqube \
          -Dsonar.organization=kmp-sq \
          -Dsonar.projectKey=kmp-sq_project \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: SonarCloud Quality Gate
        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          scanMetadataReportFile: build/sonar/report-task.txt
